{"version":3,"sources":["components/covidmap.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","root","minWidth","bullet","display","margin","transform","title","flexGrow","pos","marginBottom","menuButton","marginRight","spacing","markerhtml","fontSize","textField","fontColor","color","marginLeft","CovidMap","classes","iconOptions","className","html","useState","selectedDate","setSelectedDate","AppBar","position","Toolbar","Typography","variant","noWrap","TextField","id","type","value","onChange","event","console","log","target","InputProps","style","InputLabelProps","shrink","Button","href","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","coviddata","filter","record","d1","moment","format","d2","map","is_tier_one","match","Marker","icon","L","divIcon","Popup","Card","CardContent","gutterBottom","component","App","Grid","container","item","xs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62ccae99.chunk.js","sourcesContent":["import 'leaflet/dist/leaflet.css';\nimport React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\nimport coviddata from '../data.json'\nimport L from \"leaflet\";\nimport { AppBar, Button, Card, CardContent, TextField, Toolbar, Typography } from '@material-ui/core';\nimport moment from 'moment';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    // fontSize: 30,\n    flexGrow: 1,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  markerhtml: {\n    fontSize: 20,\n  },\n  textField: {\n    fontColor: '#FFF',\n    color: 'white',\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  }\n}));\n\nexport function CovidMap() {\n  const classes = useStyles();\n\n  const iconOptions = {\n    className: classes.markerhtml,\n    //runner, medium skin tone, Zero-Width-Joiner, female:\n    html: '🛑' // or: '&#x1f3c3;&#x1f3fd;&#x200d;&#x2640;'\n  }\n  const [selectedDate, setSelectedDate] = useState<string | null>(\n    null,\n  );\n  const handleDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log('event=', event)\n    if (event !== null && event.target !== null && event.target.value !== \"\") {\n      console.log('event.target.value=', event.target.value)\n      setSelectedDate(event.target.value);\n    }\n    else setSelectedDate(null)\n  };\n\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h5\" noWrap>\n            Covid exposure sites in Victoria\n          </Typography>\n          <div className={classes.title}>\n            <Typography variant=\"h6\" >\n              Select a Date:\n          </Typography>\n            <Typography variant=\"h6\">\n              <TextField\n                id=\"date\"\n                type=\"date\"\n                value={selectedDate}\n                onChange={handleDateChange}\n                className={classes.textField}\n                InputProps={{ style: { color: 'white' } }}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Typography>\n          </div>\n          <Button color=\"inherit\" href=\"https://github.com/xg1990/vic_covid_exposure_sites_2021\">Github</Button>\n        </Toolbar>\n      </AppBar>\n      <MapContainer center={[-37.8136, 144.9631]} zoom={11} scrollWheelZoom={true}>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://mt1.google.com/vt/lyrs=r&x={x}&y={y}&z={z}\"\n        />\n        {coviddata.filter(\n          (record)=>{\n            if (selectedDate === null) return true;\n            else {\n              const d1 = moment(record['Exposure_date'] || '', \"DD/MM/YYYY\").format('L');\n              const d2 = moment(selectedDate || '', 'YYYY-MM-DD').format('L');\n              console.log(record['Exposure_date'] || '')\n              console.log(selectedDate)\n              console.log(\"d1,d2=\", d1, d2)\n              return d1 === d2;\n            }\n          }\n        ).map((record) => {\n          const is_tier_one = record['Advice_title'].match(/^Tier 1/)\n          return (\n            <Marker position={[record['lat'] || 0, record['lon'] || 0]} icon={L.divIcon({ ...iconOptions, html: is_tier_one ? '🛑' : '⚠️' })}>\n              <Popup>\n                <Card className={classes.root}>\n                  <CardContent>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                      {record['Advice_title']}\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"h2\">\n                      {record['Site_title']}\n                    </Typography>\n                    <Typography className={classes.pos} color=\"textSecondary\">\n                      {record['Site_streetaddress']}, {record['Suburb']} {record['Site_postcode']}\n                    </Typography>\n                    <Typography variant=\"body2\" component=\"p\">\n                      {record['Advice_instruction']}\n                    </Typography>\n                    <Typography variant=\"body2\" component=\"p\">\n                      <b>Exposure_date</b>: {record['Exposure_date']}, {record['Exposure_time']}\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </Popup>\n            </Marker>\n          )\n        })}\n      </MapContainer>\n    </div>\n  )\n}","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport { CovidMap } from './components/covidmap';\nimport Grid from '@material-ui/core/Grid';\n\nfunction App() {\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        <CovidMap />\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}